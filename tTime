local _hostname, _timeLeftToPlay, _postFrequencySeconds = "https://limitless-hollows-7191.herokuapp.com", 0, 300


os.loadAPI("mc/json")

function httpGetLastLog()
  str = http.get(_hostname .. "/playlogs/last").readAll()
  obj = json.decode(str)
  return obj
end

function httpGetStartStatus()
  str = http.get(_hostname .. "/status").readAll()
  obj = json.decode(str)
  return obj
end

function httpPostLog(obj)
	str = json.encode(obj) 
	headers = {}
	headers["Content-Type"] = "application/json"
	ret = http.post(_hostname .. "/playlogs",str, headers).readAll()
  return ret
end

function WriteCountDown(strTime)
	mon = peripheral.wrap("left")
	mon.setTextScale(2)
  mon.clear()
  mon.setCursorPos(1,1)
	mon.write(strTime)
  local time = os.time()
  local formattedTime = textutils.formatTime(time, false)
  mon.setCursorPos(1,2)
	mon.write(formattedTime)

end

function WriteToDisplay()

mon = peripheral.wrap("left")
mon.setTextScale(2)

while true do
  mon.clear()
  local time = os.time()
  local formattedTime = textutils.formatTime(time, false)
--  mon.setCursorPos(1,3)
--  local h = fs.open("/mc/todoList", "r")
--  if h then
--  n=1
--  local line = h.readLine()
--  	while line and n < 9 do
--  		mon.setCursorPos(1,n)
--    	mon.write(line)
--      line = h.readLine()
--    n=n+1
--	  end
--	  h.close()
-- end

	mon.setCursorPos(1,9)
	mon.write("--------------------------------------------------")
	mon.setCursorPos(1,11)
	mon.write("   Time:  "..formattedTime)
	os.sleep(15)
end
end
function SaveLog(secs)
	Write("Posting: ".. secs/60 .. " minutes left")
	log = GetPlayLogObject(math.floor(secs/60))
	return httpPostLog(log)
end

function GetPlayLogObject(mins)
	local playlog = {}
	playlog.timeleft=mins
	playlog.gametime=0
	return playlog
end

function SecondsToPrettyTime(secs)
   hr = string.format("%02d",math.floor(secs/60/60))
	 secs = secs - hr*60*60
   min = string.format("%02d",math.floor(secs/60))
	 secs = secs - min*60
   sec = string.format("%02d",math.fmod(secs, 60))
	 return hr .. ":" .. min .. ":" .. sec 
end

function Write(msg)
	print(msg)
end

function AdjustPower(on)
		if _timeLeftToPlay < 1 then
			TurnPowerOff()
		else
			TurnPowerOn()
		end
end

function TurnPowerOff()
			Write("System Off")
end

function TurnPowerOn()
			Write("System On")
end

function PlayGameLoop()
	
	timeToPlaySecs = _timeLeftToPlay*60
	for i=timeToPlaySecs, 0, -1 do
    sleep(1) 
		if math.fmod(i,_postFrequencySeconds) == 0 then
			status = SaveLog(i)
			if status.timeleft*60 > i then
				_timeLeftToPlay = status.timeleft
				status = SaveLog(_timeLeftToPlay)
				break
			end
		end
	  WriteCountDown(SecondsToPrettyTime(i))	
		--AdjustPower()
	end
	ret = SaveLog(0)	
end

function main()
		
	status = httpGetStartStatus()
	_timeLeftToPlay = status.timeleft

	while true do
		PlayGameLoop()
	end
end

main()



